generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id             Int              @id @default(autoincrement())
  firstName      String
  lastName       String
  email          String           @unique
  password       String
  role           Role             @default(talent)
  skills         String[]
  workExperience WorkExperience[]
  postedTasks    Task[]
  submissions    Submission[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WorkExperience {
  id                 Int     @id @default(autoincrement())
  company            String
  title              String
  fromMonth          String
  fromYear           String
  isCurrentlyWorking Boolean @default(false)
  toMonth            String?
  toYear             String?
  description        String?
  userId             Int
  user               User    @relation(fields: [userId], references: [id])
}

model Task {
  id          Int          @id @default(autoincrement())
  title       String
  description String       @db.Text
  status      TaskStatus   @default(open)
  clientId    Int
  client      User         @relation(fields: [clientId], references: [id])
  skills      String[]
  reward      RewardType
  submissions Submission[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Submission {
  id          Int              @id @default(autoincrement())
  taskId      Int
  task        Task             @relation(fields: [taskId], references: [id])
  userId      Int
  user        User             @relation(fields: [userId], references: [id])
  demoLinks   String[]
  description String           @db.Text
  rating      Float?
  feedback    String?          @db.Text
  status      SubmissionStatus @default(pending)
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt

  @@unique([userId, taskId])
}

enum Role {
  talent
  client
}

enum TaskStatus {
  open
  closed
}

enum RewardType {
  full_time_job
  interview
  internship
  cash_prize
  recognition
}

enum SubmissionStatus {
  pending
  accepted
  rejected
}
